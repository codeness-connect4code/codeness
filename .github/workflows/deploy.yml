name: Deploy to AWS EC2

on:
  pull_request:
    branches:
      - develop
    types:
      - closed  # PR이 닫힐 때 실행 (머지 포함)

jobs:
  deploy:
    if: github.event.pull_request.merged == true  # 머지된 경우만 실행
    runs-on: ubuntu-latest  # GitHub Actions가 실행될 환경

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # GitHub 저장소의 코드를 체크아웃 (가져오기)

      - name: Build and Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t my-backend .  # Docker 이미지 빌드
          docker tag my-backend ${{ secrets.DOCKER_USERNAME }}/my-backend:latest  # 태그 설정
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:latest  # Docker Hub에 푸시

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master  # SSH로 EC2에 접속
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 퍼블릭 IP
          username: ubuntu  # EC2 기본 사용자명
          key: ${{ secrets.EC2_PRIVATE_KEY }}  # EC2의 SSH Key
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-backend:latest  # 최신 이미지 가져오기
            docker stop backend-container || true  # 기존 컨테이너 중지 (없어도 에러 발생 안 함)
            docker rm backend-container || true  # 기존 컨테이너 삭제
            docker run -d -p 3000:3000 --env-file .env --name backend-container ${{ secrets.DOCKER_USERNAME }}/my-backend:latest  # 새 컨테이너 실행
