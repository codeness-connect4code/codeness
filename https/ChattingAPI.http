### 멘티1 회원가입
POST localhost:8080/signup
Content-Type: application/json

{
  "email" : "chat_mentee1@naver.com",
  "password" : "asdf1234!@",
  "name" : "챗멘티인 사람1",
  "nickname" : "챗멘티1",
  "phoneNumber" : "010 - 1234 - 6328",
  "field" : "BACKEND",
  "userRole" : "MENTEE"
}


### 멘토1 회원가입
POST localhost:8080/signup
Content-Type: application/json

{
  "email" : "chat_mentor1@naver.com",
  "password" : "asdf1234!@",
  "name" : "챗멘토인 사람1",
  "nickname" : "챗멘토1",
  "phoneNumber" : "010 - 1234 - 6328",
  "field" : "BACKEND",
  "userRole" : "MENTOR"
}


### 멘티2 회원가입(dummy 데이터)
POST localhost:8080/signup
Content-Type: application/json

{
"email" : "chat_mentee2@naver.com",
"password" : "asdf1234!@",
"name" : "챗멘티인 사람2",
"nickname" : "챗멘티2",
"phoneNumber" : "010 - 1234 - 6328",
"field" : "BACKEND",
"userRole" : "MENTEE"
}


### 멘티1 로그인
POST localhost:8080/login
Content-Type: application/json

{
  "email" : "chat_mentee1@naver.com",
  "password" : "asdf1234!@"
}

> {%
  client.global.set("token",response.body.data);
  client.log("Token saved: " + client.global.get("token"));
%}


### 멘토1 로그인
POST localhost:8080/login
Content-Type: application/json

{
  "email" : "chat_mentor1@naver.com",
  "password" : "asdf1234!@"
}

> {%
  client.global.set("token",response.body.data);
  client.log("Token saved: " + client.global.get("token"));
%}


### 채팅방 생성(멘티1 과 멘토1의 채팅방)
POST localhost:8080/chat-rooms
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "paymentHistoryId" : 1,
  "mentoringDate": "2025-01-29",
  "mentoringTime": "23:00"
}


### 멘티2 로그인(외부인이 해당 채팅방 접근 가능하지 검증) -> 채팅 보내기, 채팅 목록/상세 조회/ 채팅방 삭제 시도
POST localhost:8080/login
Content-Type: application/json

{
  "email" : "chat_mentee2@naver.com",
  "password" : "asdf1234!@"
}

> {%
  client.global.set("token",response.body.data);
  client.log("Token saved: " + client.global.get("token"));
%}


### 다시 멘티1 로그인
POST localhost:8080/login
Content-Type: application/json

{
  "email" : "chat_mentee1@naver.com",
  "password" : "asdf1234!@"
}

> {%
  client.global.set("token",response.body.data);
  client.log("Token saved: " + client.global.get("token"));
%}


### 채팅 보내기
# 채팅을 상대방에게 보낸다.
# ChatCreateRequestDto 구조
# 필드 -> firebaseChatRoomId(파이어베이스 DB에 저장된 채팅방 ID)
# 필드 -> message(보낼 메시지)
## firebaseChatRoomId는 "userId1_userId2"와 같은 형식으로 되어있다. ex) 1_2

#firebase DB에는
#chatMessages:
#  1_2:
#    메시지고유ID:
#      content: "hi"
#      senderId: 1
#      timestamp: 1732323123(long형태) 로 저장된다.
POST localhost:8080/chat-rooms/chat
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firebaseChatRoomId": "1_2",
  "message": "chicken"
}


### 채팅방 목록 조회
# 내 치팅방 목록을 조회한다.
# ChatRoomDto 구조
# 필드 -> chatRoomId(파이어베이스 DB에 저장된 채팅방 ID)
# 필드 -> partnerId(상대방 ID)
# 필드 -> partnerUrl(상대방 프로필 주소)
# 필드 -> lastMessage(채팅방 마지막 메시지)
# 필드 -> lastMessageTime(마지막 메시지 보낸 시간)
# 필드 -> unReadCount(내가 안읽은 메시지 개수)
GET localhost:8080/chat-rooms
Authorization: Bearer {{token}}


### 채팅방 상세 조회
GET localhost:8080/chat-rooms/1_2
Authorization: Bearer {{token}}


### 채팅방 삭제
DELETE localhost:8080/chat-rooms/1_2
Authorization: Bearer {{token}}
